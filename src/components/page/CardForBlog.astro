---
import type { ImageMetadata } from 'astro';

import { Image } from 'astro:assets';

import { getDateParts } from '@utils/page';

interface Props {
  category: string;
  coverImage: ImageMetadata;
  coverImageAlt: string;
  date: Date;
  snippet: string;
  estimatedReadingTime: string;
  slug: string;
  tags?: string[];
  title: string;
  aboveTheFold: boolean;
}

const { category, coverImage, coverImageAlt, date, snippet, estimatedReadingTime, slug, title, aboveTheFold } =
  Astro.props;
const { year, month, day } = getDateParts(date);
---

<div
  class="max-w-sm overflow-hidden rounded-lg border border-black/20 bg-white shadow has-[:focus]:outline-none has-[:focus]:ring-4 has-[:focus]:ring-accent dark:bg-zinc-900/70"
>
  <div class="bg-primary px-4 py-1 text-center text-sm font-black uppercase text-zinc-50 dark:bg-secondary">
    <span class="pl-2">{category}</span>
  </div>
  <a href={`/blog/${slug}/`} class="custom-style flex flex-1 flex-col divide-y divide-black/20 focus:outline-none">
    <Image
      src={coverImage}
      loading={aboveTheFold ? 'eager' : 'lazy'}
      alt={coverImageAlt}
      width={382}
      height={192}
      class="sr-hidden h-48 w-full bg-primary/10 object-contain"
    />
    <div class="flex min-w-0 flex-1 p-4 pb-2 pt-2">
      <div class="flex min-w-0 flex-1 flex-col justify-around">
        <p class="line-clamp-1 font-semibold text-primary dark:text-zinc-200">
          {title}
          <span class="text-sm font-normal">({estimatedReadingTime})</span>
        </p>
        <p class="line-clamp-4 text-ellipsis text-zinc-600 dark:text-zinc-300">{snippet}</p>
      </div>
    </div>
    <time
      datetime={date.toISOString()}
      class="flex items-center justify-between bg-secondary-200 px-4 py-1 text-zinc-50 dark:bg-secondary dark:text-zinc-300"
    >
      <span class="font-black">{year}</span>
      <span class="text-xs uppercase">{month} {day}</span></time
    >
  </a>
</div>
