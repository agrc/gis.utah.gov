---
import type { IDataCategory } from '@models/products/sgid/types';
import { SgidCategory } from '@models/products/sgid/types';

import CardForData from '@components/data/CardForData.astro';
import Section from '@components/page/Section.astro';
import Layout from '@layouts/FullWidth.astro';

interface Props {
  category: string;
}

const { category } = Astro.params as Props;

export async function getStaticPaths() {
  let paths = [];

  for (let category in SgidCategory) {
    paths.push({ params: { category: category.toLowerCase() } });
  }

  return paths;
}

const pages = (await Astro.glob<IDataCategory>('../**/*.astro')).filter((page) => {
  return [page.metadata?.category?.toLowerCase(), page?.metadata?.secondaryCategory?.toLowerCase()].includes(
    category.toLowerCase(),
  );
});
---

<Layout title={`SGID ${category} data`}>
  <Section>
    <h1>The {category.toLowerCase()} data index</h1>
    {
      pages.map((page) => (
        <CardForData
          title={page.metadata.title}
          stewards={page.metadata.stewards}
          type={page.metadata.type}
          href={page.url}
        >
          {page.metadata.description}
        </CardForData>
      ))
    }
  </Section>
</Layout>
