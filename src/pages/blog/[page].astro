---
import Pagination from '@components/Pagination.astro';
import CardWithDate from '@components/page/CardWithDate.astro';
import GridForLatestNews from '@components/page/GridForLatestNews.astro';
import FullWidth from '@layouts/FullWidth.astro';
import getReadingTimeFromMarkdown from '@utils/readingTime';
import type { Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import { fromMarkdown } from 'mdast-util-from-markdown';
import { toString } from 'mdast-util-to-string';

export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection('blog'))
    .filter((post) => post.data.published)
    .sort((b, a) => a.data.date.valueOf() - b.data.date.valueOf())
    .map((post) => ({
      ...post,
      data: {
        ...post.data,
        estimatedReadTime: getReadingTimeFromMarkdown(post.body),
      },
    }));

  return paginate(posts, { pageSize: 20 });
}

const { page } = Astro.props as { page: Page<CollectionEntry<'blog'>> };
---

<FullWidth title="From the blog">
  <Pagination page={page} class="mb-3" />
  <GridForLatestNews>
    {
      page.data.map((post) => (
        <CardWithDate
          includeYear
          title={post.data.title}
          description={toString(fromMarkdown(post.body)).slice(0, 200) ?? 'a blog post'}
          date={post.data.date}
          slug={post.slug}
          estimatedReadingTime={post.data.estimatedReadTime}
        />
      ))
    }
  </GridForLatestNews>
</FullWidth>
